#!/bin/bash -e

### BEGIN INIT INFO
# Provides:          bof5
# Required-Start:    $remote_fs
# Required-Stop:     $remote_fs
# Should-Start:      $network
# Should-Stop:       $network
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start and stop bof5 scripts
# Description:       Script system for BOF5 server created with love by ORIDIS
### END INIT INFO

PATH=/sbin:/bin:/usr/sbin:/usr/bin

# Author: Andrey Izhakovskiy <stels@epage.ru>

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="BOF5 Script Service"
NAME="bof5scripts"
PIDDIR=/var/run/
SCRIPTNAME=/etc/init.d/$NAME
BOF5SCRIPT=/initScript/example.php
PHPARGS="-d display_errors=1"
DEFAULT="YandexCaptchaRecognizer SeoCheckPlagiarism SeoCheckPromotedPages LtSitesTaskWatchdog"
# NOT USE SapePagesIndexChecker LtSitesPagesIndexChecker

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

getCommand()
{
    for i in "$@"
    do
        c=${i}
    done

    case "$c" in
        start)
            c=$c
        ;;
        stop)
            c="stop"
        ;;
        *)
            c="default"
        ;;
    esac
}

getHelp()
{
    echo "Use SapePagesIndexChecker YandexCaptchaRecognizer SeoCheckPlagiarism SeoCheckPromotedPages LtSitesTaskWatchdog LtSitesPagesIndexChecker
    with commands start/stop"
    exit 0;
}

if [ "$#" = "0" ]
    then
        getHelp;
    fi

getCommand $@;

case "$c" in
    start)
        ARR=$@

        if [ $# = "1" ]
            then
                ARR=$DEFAULT
            fi
    
        for i in $ARR
        do
            if [ $i = $c ]
                then
                    exit 1;
                fi

            PID=`ps -aux | grep SCREEN | grep ${i} | awk '{print $2}'`

            if [ X$PID != X ]
                then
                    kill -9 $PID
                fi

            COMMAND="php $PHPARGS $BOF5SCRIPT ${i} | tee /var/log/bof5/${i}.log"
            screen -dmS ${i} bash -c "$COMMAND"
        done
    ;;
    stop)
        ARR=$@
    
        if [ $# = "1" ]
            then
                ARR=$DEFAULT
            fi

        for i in $ARR
        do
            if [ $i = $c ]
                then
                    exit 1;
                fi

            PID=`ps -aux | grep SCREEN | grep ${i} | awk '{print $2}'`

            if [ X$PID != X ]
                then
                    screen -S ${i} -X quit
                fi
        done
    ;;
    *)
        getHelp;
    ;;
esac

exit 0